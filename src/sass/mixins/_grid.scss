// Render property row
@mixin render-row($gap: $grid-gap-width) {
    display: flex;
    flex-wrap: wrap;
    margin-left: -$gap / 2;
    margin-right: -$gap / 2;
}

// Render property col, percentage -> return %
@mixin render-col($column, $colums: $grid-columns) {
    flex: 0 0 percentage($number: $column / $colums) !important;
    max-width: percentage($number: $column / $colums) !important;
}

@mixin render-grid-columns(
    $name: "",
    $gap: $grid-gap-width,
    $grids: $grid-breakpoints,
    $columns: $grid-columns
) {
    %base-col {
        width: 100%;
        position: relative;
        padding-left: $gap / 2;
        padding-right: $gap / 2;
    }
    @for $i from 1 through $columns {
        #{$name}__#{$i} {
            @extend %base-col;
            @include render-col($i, $columns);
        }
    }
    @each $breakpoint, $value in $grids {
        $prefix: breakpoint-prefix($breakpoint, $grids);
        @for $i from 1 through $columns {
            #{$name}#{$prefix}__#{$i} {
                @extend %base-col;
            }
        }
        @include make-media-query($breakpoint, $grids) {
            @for $i from 1 through $columns {
                #{$name}#{$prefix}__#{$i} {
                    @include render-col($i, $columns);
                }
            }
        }
    }
}

@mixin initRow($name) {
    @include make-class($name) {
        @include render-row();
    }
}

@mixin initGridColumns($name) {
    @include render-grid-columns($name);
}

@include initRow("#{$el}row");
@include initGridColumns("#{$el}col");
